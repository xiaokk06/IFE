div {
    margin: 5px;
    border: 1px solid #999;
}

* {
    font-family: "Microsoft YaHei";
}

.main {
    margin-top: 100px;
    margin-left: auto;
    margin-right: auto;
    width: 1200px;
    display: flex;
    height: 300px;
    div {
        flex: 1 1 0;
        display: flex;
        padding: 3px;
    }
}

button {
    margin-top: 10px;
    cursor: pointer;
    line-height: 40px;
    // 这里将加上下面的height属性之后文字并没有居中
    // 把line-height值设置为height一样大小的值可以实现单行文字的垂直居中。
    // 这句话确实是正确的，但其实也是有问题的。
    // 把line-height设置为您需要的box的大小可以实现单行文字的垂直居中
    // 差别在于我把height去掉了，这个height是多余的
    // height=content-height+padding+border 设置height之后实际内容区只有38px 
    // 此时文字并没有居中
    // 设置line-height之后内容区高度为42px 此时文字垂直居中
    // height:40px;
    // display: inline-block;  //button默认为内联元素
    // 一个元素的高度是由line-height撑开的
    // line-height通过line-boxes体现高度
    // line-boxes的高度由每一个inline-box构成

    // line boxes所占据的高度是多少（无论比文字大还是比文字小）
    // 其占据的空间都是与文字内容公用水平中垂线的
    // 这也就是为什么高度设置为40px之后文字并没有产生位移反而是box高度变小导致文字不居中显示
    padding: 0 5px;
    border: 1px solid #999;
    &:not(:last-of-type) {
        margin-right: 30px;
    }
    &:first-of-type {
        margin-left: 70px;
    }
}

.keyword {
    border: 1px solid #999;
    // 这里的height也是可要可不要的
    // input同样也是内联元素
    line-height: 40px;
    // 含padding值得input高度为42px 和button等高
    // padding: 0;
    text-indent: 5px;
    margin-right:10px;
}
